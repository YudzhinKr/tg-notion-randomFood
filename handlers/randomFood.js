// handlers/randomFood.js

const menuState = {}; // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –º–µ–Ω—é –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

const dailyMenuHandler = async (bot, msg, notion, mainKeyboard) => {
    const chatId = msg.chat.id;

    const generatingMessage = await bot.sendMessage(chatId, '–ì–µ–Ω–µ—Ä—É—é –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å... üîÑ'); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è

    try {
        const breakfastItems = await getFoodItemsFromNotion(notion, '–ó–∞–≤—Ç—Ä–∞–∫');
        const lunchItems = await getFoodItemsFromNotion(notion, '–û–±—ñ–¥');
        const dinnerItems = await getFoodItemsFromNotion(notion, '–í–µ—á–µ—Ä—è');

        if (breakfastItems.length === 0 || lunchItems.length === 0 || dinnerItems.length === 0) {
            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ì–µ–Ω–µ—Ä—É—é –º–µ–Ω—é..."
            await bot.deleteMessage(chatId, generatingMessage.message_id).catch(e => console.log('Could not delete generating message:', e.message));
            return bot.sendMessage(chatId, '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Å—Ç—Ä–∞–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é. –î–æ–¥–∞–π—Ç–µ –ø–æ –æ–¥–Ω—ñ–π —Å—Ç—Ä–∞–≤—ñ –¥–ª—è "–ó–∞–≤—Ç—Ä–∞–∫—É", "–û–±—ñ–¥—É" —Ç–∞ "–í–µ—á–µ—Ä—ñ".', mainKeyboard);
        }

        const selectedBreakfast = getRandomItem(breakfastItems);
        const selectedLunch = getRandomItem(lunchItems);
        const selectedDinner = getRandomItem(dinnerItems);

        const menuDetails = {
            breakfast: selectedBreakfast,
            lunch: selectedLunch,
            dinner: selectedDinner,
        };

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –º–µ–Ω—é –≤ —Å—Ç–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        menuState[chatId] = menuDetails;

        let menuMessage = '‚ú® –ü—Ä–æ–ø–æ–Ω—É—é —Ç–∞–∫–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å:\n\n';
        menuMessage += `üç≥ –ó–∞–≤—Ç—Ä–∞–∫:\n${selectedBreakfast.name} - ${selectedBreakfast.calories} –∫–∫–∞–ª - ${selectedBreakfast.proteins} –±—ñ–ª–∫—ñ–≤\n`;
        menuMessage += `üç≤ –û–±—ñ–¥:\n${selectedLunch.name} - ${selectedLunch.calories} –∫–∫–∞–ª - ${selectedLunch.proteins} –±—ñ–ª–∫—ñ–≤\n`;
        menuMessage += `ü•ó –í–µ—á–µ—Ä—è:\n${selectedDinner.name} - ${selectedDinner.calories} –∫–∫–∞–ª - ${selectedDinner.proteins} –±—ñ–ª–∫—ñ–≤\n\n`;
        menuMessage += '–•–æ—á–µ—à –ø–æ–±–∞—á–∏—Ç–∏ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏?'; // –¶—è —Ñ—Ä–∞–∑–∞ –±—É–¥–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—è

        // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ì–µ–Ω–µ—Ä—É—é –º–µ–Ω—é..." –ø–µ—Ä–µ–¥ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è–º –Ω–æ–≤–æ–≥–æ
        await bot.deleteMessage(chatId, generatingMessage.message_id).catch(e => console.log('Could not delete generating message:', e.message));

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–µ –º–µ–Ω—é –∑ —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
        const sentMenuMessage = await bot.sendMessage(chatId, menuMessage, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '‚úÖ –¢–∞–∫', callback_data: 'show_ingredients_yes' }, { text: '‚ùå –ù—ñ', callback_data: 'show_ingredients_no' }],
                ],
            },
        });
        menuState[chatId].menuMessageId = sentMenuMessage.message_id; // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –º–µ–Ω—é

    } catch (error) {
        console.error('üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –º–µ–Ω—é:', error);
        // –Ø–∫—â–æ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞, —Ç–∞–∫–æ–∂ –≤–∏–¥–∞–ª—è—î–º–æ "–ì–µ–Ω–µ—Ä—É—é –º–µ–Ω—é..."
        await bot.deleteMessage(chatId, generatingMessage.message_id).catch(e => console.log('Could not delete generating message on error:', e.message));
        return bot.sendMessage(chatId, '‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –º–µ–Ω—é. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.', mainKeyboard);
    }
};

const handleMenuCallbackQuery = async (bot, callbackQuery, mainKeyboard) => {
    const chatId = callbackQuery.message.chat.id;
    const data = callbackQuery.data;
    const currentMenuText = callbackQuery.message.text; // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

    // –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ Telegram, —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ "loading..."
    await bot.answerCallbackQuery(callbackQuery.id);

    const currentMenu = menuState[chatId];

    if (!currentMenu || !currentMenu.menuMessageId) {
        return bot.sendMessage(chatId, '–ü–æ—Ç–æ—á–Ω–µ –º–µ–Ω—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó –≤–∏–π—à–æ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –º–µ–Ω—é –∑–Ω–æ–≤—É.', mainKeyboard);
    }

    // –ù–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–∏–±–æ—Ä—É (–¢–∞–∫/–ù—ñ), –æ–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –º–µ–Ω—é
    // –©–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è "–•–æ—á–µ—à –ø–æ–±–∞—á–∏—Ç–∏ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏?" —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É.
    const updatedMenuText = currentMenuText.replace('–•–æ—á–µ—à –ø–æ–±–∞—á–∏—Ç–∏ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏?', '').trim(); // –í–∏–¥–∞–ª—è—î–º–æ –ø–∏—Ç–∞–Ω–Ω—è

    await bot.editMessageText(updatedMenuText, {
        chat_id: chatId,
        message_id: currentMenu.menuMessageId,
        reply_markup: { inline_keyboard: [] } // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ "–¢–∞–∫/–ù—ñ"
    }).catch(e => console.log('Could not edit menu message text/reply markup:', e.message));


    if (data === 'show_ingredients_yes') {
        let ingredientsMessage = 'üìã –Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ –¥–ª—è —Ç–≤–æ–≥–æ –º–µ–Ω—é:\n\n';
        ingredientsMessage += `üç≥ ${currentMenu.breakfast.name}:\n${currentMenu.breakfast.ingredients}\n\n`;
        ingredientsMessage += `üç≤ ${currentMenu.lunch.name}:\n${currentMenu.lunch.ingredients}\n\n`;
        ingredientsMessage += `ü•ó ${currentMenu.dinner.name}:\n${currentMenu.dinner.ingredients}\n\n`;
        ingredientsMessage += '–¢–∏ –∑–∞—Å–ª—É–≥–æ–≤—É—î—à –Ω–∞ —Å–º–∞—á–Ω–∏–π –¥–µ–Ω—å ! üòä';

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ –ù–û–í–ò–ú –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
        await bot.sendMessage(chatId, ingredientsMessage);

        // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω –º–µ–Ω—é –ø—ñ—Å–ª—è –ø–æ–∫–∞–∑—É —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤
        delete menuState[chatId];
    } else if (data === 'show_ingredients_no') {
        // –ú–∏ –≤–∂–µ –æ–Ω–æ–≤–∏–ª–∏ —Ç–µ–∫—Å—Ç —Ç–∞ –ø—Ä–∏–±—Ä–∞–ª–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≤–∏—â–µ.
        // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω –º–µ–Ω—é
        delete menuState[chatId];
    }
    // –ì–æ–ª–æ–≤–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –∞–∫—Ç–∏–≤–Ω–æ—é
};

// –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç—Ä–∞–≤ –∑ Notion
async function getFoodItemsFromNotion(notion, mealType) {
    try {
        const response = await notion.databases.query({
            database_id: process.env.NOTION_DB_ID,
            filter: {
                property: '–ü—Ä–∏–π–æ–º —ó–∂—ñ',
                select: { equals: mealType },
            },
        });
        return response.results.map(page => ({
            id: page.id,
            name: page.properties['–ù–∞–∑–≤–∞ —Å—Ç—Ä–∞–≤–∏'].title[0]?.plain_text || '–ë–µ–∑ –Ω–∞–∑–≤–∏',
            calories: page.properties['–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å']?.number || 0,
            proteins: page.properties['–ë—ñ–ª–∫–∏']?.number || 0,
            ingredients: page.properties['–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏']?.rich_text[0]?.plain_text || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ',
        }));
    } catch (error) {
        console.error(`üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç—Ä–∞–≤ –∑ Notion –¥–ª—è ${mealType}:`, error);
        return [];
    }
}

// –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤–∏–±–æ—Ä—É –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –º–∞—Å–∏–≤—É
function getRandomItem(arr) {
    if (!arr || arr.length === 0) {
        return null;
    }
    const randomIndex = Math.random() * arr.length;
    return arr[Math.floor(randomIndex)];
}

module.exports = {
    dailyMenuHandler,
    handleMenuCallbackQuery,
};