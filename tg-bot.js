require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const { Client } = require('@notionhq/client');
const express = require('express');

const { addFoodHandler, handleCallbackQuery, userState } = require('./handlers/addFood');
const { deleteFoodHandler, handleDeleteCallback } = require('./handlers/deleteFood'); // deleteState –±—ñ–ª—å—à–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω –≤ —ñ–º–ø–æ—Ä—Ç—ñ
const { dailyMenuHandler, handleMenuCallbackQuery } = require('./handlers/randomFood'); // <-- –ó–º—ñ–Ω–µ–Ω–æ —à–ª—è—Ö —ñ–º–ø–æ—Ä—Ç—É

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });
const notion = new Client({ auth: process.env.NOTION_TOKEN });

// –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
const mainKeyboard = {
¬† reply_markup: {
¬† ¬† keyboard: [
¬† ¬† ¬† ['‚ûï –î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É', 'üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç—Ä–∞–≤—É'],
¬† ¬† ¬† ['üç± –ü—ñ–¥—ñ–±—Ä–∞—Ç–∏ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å'], // <-- –ù–æ–≤–∞ –∫–Ω–æ–ø–∫–∞
¬† ¬† ],
¬† ¬† resize_keyboard: true,
¬† },
};

// –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
bot.onText(/\/start/, (msg) => {
¬† bot.sendMessage(msg.chat.id, '–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –¥—ñ—é:', mainKeyboard);
});

// –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
bot.on('message', async (msg) => {
¬† const text = msg.text;
¬† const chatId = msg.chat.id;

¬† if (text === '‚ûï –î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É') {
¬† ¬† return addFoodHandler(bot, msg, userState, notion, mainKeyboard);
¬† }

¬† if (text === 'üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç—Ä–∞–≤—É') {
¬† ¬† return deleteFoodHandler(bot, msg, notion, mainKeyboard);
¬† }

  if (text === 'üç± –ü—ñ–¥—ñ–±—Ä–∞—Ç–∏ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å') { // <-- –ù–æ–≤–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏
    return dailyMenuHandler(bot, msg, notion, mainKeyboard);
  }

¬† if (userState[chatId]) { // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –ª–æ–≥—ñ–∫—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –ø—Ä–æ—Ü–µ—Å—ñ
¬† ¬† return addFoodHandler(bot, msg, userState, notion, mainKeyboard);
¬† }
});

// –û–±—Ä–æ–±–∫–∞ callback_query
bot.on('callback_query', async (callbackQuery) => {
    const data = callbackQuery.data;
    const chatId = callbackQuery.message.chat.id;

    // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –æ–±—Ä–æ–±–∏—Ç–∏ callback –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —ó–∂—ñ
    if (data.startsWith('meal_')) {
        await handleCallbackQuery(bot, callbackQuery, userState);
    }
    // –Ø–∫—â–æ —Ü–µ –Ω–µ –∫–Ω–æ–ø–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è, —Å–ø—Ä–æ–±—É—î–º–æ –æ–±—Ä–æ–±–∏—Ç–∏ callback –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    else if (data.startsWith('delete_') || data.startsWith('confirm_')) {
        await handleDeleteCallback(bot, callbackQuery, notion, mainKeyboard);
    }
    // –Ø–∫—â–æ —Ü–µ –Ω–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è/–≤–∏–¥–∞–ª–µ–Ω–Ω—è, —Å–ø—Ä–æ–±—É—î–º–æ –æ–±—Ä–æ–±–∏—Ç–∏ callback –¥–ª—è –º–µ–Ω—é
    else if (data.startsWith('show_ingredients_')) { // <-- –ù–æ–≤–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –º–µ–Ω—é
        await handleMenuCallbackQuery(bot, callbackQuery, mainKeyboard);
    }

    // –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ Telegram, —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ "loading..."
    // –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ callback_query
    bot.answerCallbackQuery(callbackQuery.id);
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ üöÄ');


const app = express();
const PORT = process.env.PORT || 3000;

app.get('/ping', (req, res) => {
  res.send('‚úÖ Bot is alive');
});

app.listen(PORT, () => {
  console.log(`üåê Web server is listening on port ${PORT}`);
});
